package result;


import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;

import opticDiscAnalyser.MainWindow;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

//to generate report in the form of pdf file

public class GenerateReport {
	
	private static String FILE = userProfile.UserProfile.name + ".pdf";
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 30, Font.BOLD, BaseColor.BLUE);
	private static Font smallFont = new Font(Font.FontFamily.TIMES_ROMAN, 10, Font.NORMAL);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
	private static Font normalFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
	
	
	private static String image = opticDiscAnalyser.Directory.s;
	private static String image2 = opticDiscAnalyser.MainWindow.as;

	  public static void main() {
	    try {
	    	
	   /* 	Properties connectionProps = new Properties();
			connectionProps.put("user", Database.userName);
			connectionProps.put("password", Database.password);
			conn = DriverManager.getConnection("jdbc:mysql://" + Database.serverName + ":" + Database.portNumber + "/" + Database.dbName, connectionProps);
			
			String result = opticDiscAnalyser.MainWindow.eye;
			ps = conn.prepareStatement("SELECT * FROM " + result + " WHERE REFNO = ?");
			ps.setString(1,UserProfile.getRefNo());
			rs = ps.executeQuery();
		*/	
	    	
	        Document document = new Document();
	        PdfWriter.getInstance(document, new FileOutputStream(FILE));
	        document.open();
	        addMetaData(document);
	        addContentPage(document);
	        document.close();
	        
	    } catch (Exception e) {
	      e.printStackTrace();
	    }
	  }

	  // iText allows to add metadata to the PDF which can be viewed in your Adobe
	  // Reader
	  // under File -> Properties
	  private static void addMetaData(Document document) {
	    document.addTitle("PDF Report");
	    document.addSubject("Summary of Optic Disc Result");
	    document.addKeywords("ODAS, PDF");
	    document.addAuthor("ODAS");
	    document.addCreator("ODAS");
	  }

	  private static void addContentPage(Document document) throws DocumentException, IOException {
	   
		Date date = new Date();
		SimpleDateFormat format = new SimpleDateFormat("yyyy/MM/dd");
		String DateToStr = format.format(date);
		String result = opticDiscAnalyser.MainWindow.eye;
		
		Paragraph preface = new Paragraph();
	    // We add one empty line
	    addEmptyLine(preface, 1);
	    // Lets write a big header
	    preface.add(new Paragraph("Summary of Optic Disc Result", catFont));

	    addEmptyLine(preface, 1);
	    // Will create: Report generated by: _name, _date
	    preface.add(new Paragraph("Report generated by: Optic Disc Analysing System v1.0, " + new Date(), smallFont));
	    
	    addEmptyLine(preface, 1);
	    preface.add(new Paragraph("Name            : " + userProfile.UserProfile.name, smallBold));
	    preface.add(new Paragraph("Date of Birth: " + userProfile.UserProfile.dateOfBirth, smallBold));
	    preface.add(new Paragraph("Gender          : " + userProfile.UserProfile.gender, smallBold));
	    preface.add(new Paragraph("Race              : " + userProfile.UserProfile.ethnic, smallBold));
	    preface.add(new Paragraph("Check Up Date: " + DateToStr, smallBold));
	    preface.add(new Paragraph("Eye Image     : " + result, smallBold));
	    
	    addEmptyLine(preface, 2);
	    preface.add(new Paragraph("All readings are in pixels", normalFont));
	    addEmptyLine(preface, 1);
	    document.add(preface);
	    
	    PdfPTable table = new PdfPTable(2);
        table.setWidthPercentage(100);
        table.addCell(createImageCell(image));
        table.addCell(createImageCell(image2));
        document.add(table);
	    DecimalFormat df = new DecimalFormat("#.####");
	    
	    // We create a list:
        List list = new List();                
        list.add(new ListItem("All readings are in pixels"));
        list.add(new ListItem("Area CDR   : " + df.format(MainWindow.areaCDR)));
        list.add(new ListItem("Area Cup   : " + df.format(MainWindow.areaCup)));
        list.add(new ListItem("Area Disc : " + df.format(MainWindow.areaDisc)));
    
        list.add(new ListItem("Mean CDR  : " + df.format(MainWindow.meanCDR)));
    
        list.add(new ListItem(MainWindow.resultCDR));
 
        list.add(new ListItem("Horizontal CDR : " + df.format(MainWindow.horizontalCDR)));
        list.add(new ListItem("Horizontal Cup : " + df.format(MainWindow.horizontalCup)));
        list.add(new ListItem("Horizontal Disc: " + df.format(MainWindow.horizontalDisc)));

        List list2 = new List();
        list2.add(new ListItem("Vertical CDR  : " + df.format(MainWindow.verticalCDR)));
        list2.add(new ListItem("Vertical Cup  : " + df.format(MainWindow.verticalCup)));
        list2.add(new ListItem("Vertical Disc : " + df.format(MainWindow.verticalDisc)));
      
        list2.add(new ListItem(MainWindow.ISNT_rule));
        list2.add(new ListItem("Inferior Rim  : " + df.format(MainWindow.rimTI)));
        list2.add(new ListItem("Superior Rim  : " + df.format(MainWindow.rimNS)));
        list2.add(new ListItem("Nasal Rim     : " + df.format(MainWindow.rimIN)));
        list2.add(new ListItem("Temporal Rim  : " + df.format(MainWindow.rimST)));
        
       
     // We wrap this list in a phrase:     
        Phrase phrase = new Phrase();
        phrase.add(list);
        // We add this phrase to a cell
        PdfPCell phraseCell = new PdfPCell();
        phraseCell.addElement(phrase);  
        
        
        // We wrap this list in a phrase:     
        Phrase phrase2 = new Phrase();
        phrase2.add(list2);
        // We add this phrase to a cell
        PdfPCell phraseCell2 = new PdfPCell();
        phraseCell2.addElement(phrase2);           
 
        // We add the cell to a table:
        PdfPTable phraseTable = new PdfPTable(2);
        phraseTable.setSpacingBefore(5);
        phraseTable.addCell(phraseCell);
        phraseTable.addCell(phraseCell2);
	    document.add(phraseTable);
	    
	    
	  }

	  private static void addEmptyLine(Paragraph paragraph, int number) {
	    for (int i = 0; i < number; i++) {
	      paragraph.add(new Paragraph(" "));
	    }
	  }
	  
	  public static PdfPCell createImageCell(String path) throws DocumentException, IOException {
	        Image img = Image.getInstance(path);
	        PdfPCell cell = new PdfPCell(img, true);
	        return cell;
	    }
	  
	} 
